// Generated by jextract

package net.codecrete.usb.macos.gen.corefoundation;

import java.lang.foreign.Arena;
import java.lang.foreign.MemoryLayout;
import java.lang.foreign.MemorySegment;
import java.lang.foreign.SegmentAllocator;
import java.lang.invoke.VarHandle;
/**
 * {@snippet :
 * struct {
 *     UInt8 byte0;
 *     UInt8 byte1;
 *     UInt8 byte2;
 *     UInt8 byte3;
 *     UInt8 byte4;
 *     UInt8 byte5;
 *     UInt8 byte6;
 *     UInt8 byte7;
 *     UInt8 byte8;
 *     UInt8 byte9;
 *     UInt8 byte10;
 *     UInt8 byte11;
 *     UInt8 byte12;
 *     UInt8 byte13;
 *     UInt8 byte14;
 *     UInt8 byte15;
 * };
 * }
 */
public class CFUUIDBytes {

    public static MemoryLayout $LAYOUT() {
        return constants$3.const$3;
    }
    public static VarHandle byte0$VH() {
        return constants$3.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UInt8 byte0;
     * }
     */
    public static byte byte0$get(MemorySegment seg) {
        return (byte)constants$3.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UInt8 byte0;
     * }
     */
    public static void byte0$set(MemorySegment seg, byte x) {
        constants$3.const$4.set(seg, x);
    }
    public static byte byte0$get(MemorySegment seg, long index) {
        return (byte)constants$3.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void byte0$set(MemorySegment seg, long index, byte x) {
        constants$3.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle byte1$VH() {
        return constants$3.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UInt8 byte1;
     * }
     */
    public static byte byte1$get(MemorySegment seg) {
        return (byte)constants$3.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UInt8 byte1;
     * }
     */
    public static void byte1$set(MemorySegment seg, byte x) {
        constants$3.const$5.set(seg, x);
    }
    public static byte byte1$get(MemorySegment seg, long index) {
        return (byte)constants$3.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void byte1$set(MemorySegment seg, long index, byte x) {
        constants$3.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle byte2$VH() {
        return constants$4.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UInt8 byte2;
     * }
     */
    public static byte byte2$get(MemorySegment seg) {
        return (byte)constants$4.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UInt8 byte2;
     * }
     */
    public static void byte2$set(MemorySegment seg, byte x) {
        constants$4.const$0.set(seg, x);
    }
    public static byte byte2$get(MemorySegment seg, long index) {
        return (byte)constants$4.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void byte2$set(MemorySegment seg, long index, byte x) {
        constants$4.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle byte3$VH() {
        return constants$4.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UInt8 byte3;
     * }
     */
    public static byte byte3$get(MemorySegment seg) {
        return (byte)constants$4.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UInt8 byte3;
     * }
     */
    public static void byte3$set(MemorySegment seg, byte x) {
        constants$4.const$1.set(seg, x);
    }
    public static byte byte3$get(MemorySegment seg, long index) {
        return (byte)constants$4.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void byte3$set(MemorySegment seg, long index, byte x) {
        constants$4.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle byte4$VH() {
        return constants$4.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UInt8 byte4;
     * }
     */
    public static byte byte4$get(MemorySegment seg) {
        return (byte)constants$4.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UInt8 byte4;
     * }
     */
    public static void byte4$set(MemorySegment seg, byte x) {
        constants$4.const$2.set(seg, x);
    }
    public static byte byte4$get(MemorySegment seg, long index) {
        return (byte)constants$4.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void byte4$set(MemorySegment seg, long index, byte x) {
        constants$4.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle byte5$VH() {
        return constants$4.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UInt8 byte5;
     * }
     */
    public static byte byte5$get(MemorySegment seg) {
        return (byte)constants$4.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UInt8 byte5;
     * }
     */
    public static void byte5$set(MemorySegment seg, byte x) {
        constants$4.const$3.set(seg, x);
    }
    public static byte byte5$get(MemorySegment seg, long index) {
        return (byte)constants$4.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void byte5$set(MemorySegment seg, long index, byte x) {
        constants$4.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle byte6$VH() {
        return constants$4.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UInt8 byte6;
     * }
     */
    public static byte byte6$get(MemorySegment seg) {
        return (byte)constants$4.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UInt8 byte6;
     * }
     */
    public static void byte6$set(MemorySegment seg, byte x) {
        constants$4.const$4.set(seg, x);
    }
    public static byte byte6$get(MemorySegment seg, long index) {
        return (byte)constants$4.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void byte6$set(MemorySegment seg, long index, byte x) {
        constants$4.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle byte7$VH() {
        return constants$4.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UInt8 byte7;
     * }
     */
    public static byte byte7$get(MemorySegment seg) {
        return (byte)constants$4.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UInt8 byte7;
     * }
     */
    public static void byte7$set(MemorySegment seg, byte x) {
        constants$4.const$5.set(seg, x);
    }
    public static byte byte7$get(MemorySegment seg, long index) {
        return (byte)constants$4.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void byte7$set(MemorySegment seg, long index, byte x) {
        constants$4.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle byte8$VH() {
        return constants$5.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UInt8 byte8;
     * }
     */
    public static byte byte8$get(MemorySegment seg) {
        return (byte)constants$5.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UInt8 byte8;
     * }
     */
    public static void byte8$set(MemorySegment seg, byte x) {
        constants$5.const$0.set(seg, x);
    }
    public static byte byte8$get(MemorySegment seg, long index) {
        return (byte)constants$5.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void byte8$set(MemorySegment seg, long index, byte x) {
        constants$5.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle byte9$VH() {
        return constants$5.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UInt8 byte9;
     * }
     */
    public static byte byte9$get(MemorySegment seg) {
        return (byte)constants$5.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UInt8 byte9;
     * }
     */
    public static void byte9$set(MemorySegment seg, byte x) {
        constants$5.const$1.set(seg, x);
    }
    public static byte byte9$get(MemorySegment seg, long index) {
        return (byte)constants$5.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void byte9$set(MemorySegment seg, long index, byte x) {
        constants$5.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle byte10$VH() {
        return constants$5.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UInt8 byte10;
     * }
     */
    public static byte byte10$get(MemorySegment seg) {
        return (byte)constants$5.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UInt8 byte10;
     * }
     */
    public static void byte10$set(MemorySegment seg, byte x) {
        constants$5.const$2.set(seg, x);
    }
    public static byte byte10$get(MemorySegment seg, long index) {
        return (byte)constants$5.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void byte10$set(MemorySegment seg, long index, byte x) {
        constants$5.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle byte11$VH() {
        return constants$5.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UInt8 byte11;
     * }
     */
    public static byte byte11$get(MemorySegment seg) {
        return (byte)constants$5.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UInt8 byte11;
     * }
     */
    public static void byte11$set(MemorySegment seg, byte x) {
        constants$5.const$3.set(seg, x);
    }
    public static byte byte11$get(MemorySegment seg, long index) {
        return (byte)constants$5.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void byte11$set(MemorySegment seg, long index, byte x) {
        constants$5.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle byte12$VH() {
        return constants$5.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UInt8 byte12;
     * }
     */
    public static byte byte12$get(MemorySegment seg) {
        return (byte)constants$5.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UInt8 byte12;
     * }
     */
    public static void byte12$set(MemorySegment seg, byte x) {
        constants$5.const$4.set(seg, x);
    }
    public static byte byte12$get(MemorySegment seg, long index) {
        return (byte)constants$5.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void byte12$set(MemorySegment seg, long index, byte x) {
        constants$5.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle byte13$VH() {
        return constants$5.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UInt8 byte13;
     * }
     */
    public static byte byte13$get(MemorySegment seg) {
        return (byte)constants$5.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UInt8 byte13;
     * }
     */
    public static void byte13$set(MemorySegment seg, byte x) {
        constants$5.const$5.set(seg, x);
    }
    public static byte byte13$get(MemorySegment seg, long index) {
        return (byte)constants$5.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void byte13$set(MemorySegment seg, long index, byte x) {
        constants$5.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle byte14$VH() {
        return constants$6.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UInt8 byte14;
     * }
     */
    public static byte byte14$get(MemorySegment seg) {
        return (byte)constants$6.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UInt8 byte14;
     * }
     */
    public static void byte14$set(MemorySegment seg, byte x) {
        constants$6.const$0.set(seg, x);
    }
    public static byte byte14$get(MemorySegment seg, long index) {
        return (byte)constants$6.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void byte14$set(MemorySegment seg, long index, byte x) {
        constants$6.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle byte15$VH() {
        return constants$6.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UInt8 byte15;
     * }
     */
    public static byte byte15$get(MemorySegment seg) {
        return (byte)constants$6.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UInt8 byte15;
     * }
     */
    public static void byte15$set(MemorySegment seg, byte x) {
        constants$6.const$1.set(seg, x);
    }
    public static byte byte15$get(MemorySegment seg, long index) {
        return (byte)constants$6.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void byte15$set(MemorySegment seg, long index, byte x) {
        constants$6.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


