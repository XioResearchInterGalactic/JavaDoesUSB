// Generated by jextract

package net.codecrete.usb.macos.gen.iokit;

import java.lang.foreign.FunctionDescriptor;
import java.lang.foreign.MemoryLayout;
import java.lang.foreign.StructLayout;
import java.lang.invoke.MethodHandle;

import static java.lang.foreign.ValueLayout.JAVA_INT;
final class constants$4 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$4() {}
    static final FunctionDescriptor const$0 = FunctionDescriptor.of(JAVA_INT,
        JAVA_INT,
        RuntimeHelper.POINTER
    );
    static final MethodHandle const$1 = RuntimeHelper.downcallHandle(
        "IORegistryEntryGetRegistryEntryID",
        constants$4.const$0
    );
    static final FunctionDescriptor const$2 = FunctionDescriptor.of(RuntimeHelper.POINTER,
        JAVA_INT,
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER,
        JAVA_INT
    );
    static final MethodHandle const$3 = RuntimeHelper.downcallHandle(
        "IORegistryEntryCreateCFProperty",
        constants$4.const$2
    );
    static final MethodHandle const$4 = RuntimeHelper.downcallHandle(
        "IOServiceMatching",
        constants$3.const$0
    );
    static final StructLayout const$5 = MemoryLayout.structLayout(
        RuntimeHelper.POINTER.withName("_reserved"),
        RuntimeHelper.POINTER.withName("QueryInterface"),
        RuntimeHelper.POINTER.withName("AddRef"),
        RuntimeHelper.POINTER.withName("Release"),
        RuntimeHelper.POINTER.withName("CreateDeviceAsyncEventSource"),
        RuntimeHelper.POINTER.withName("GetDeviceAsyncEventSource"),
        RuntimeHelper.POINTER.withName("CreateDeviceAsyncPort"),
        RuntimeHelper.POINTER.withName("GetDeviceAsyncPort"),
        RuntimeHelper.POINTER.withName("USBDeviceOpen"),
        RuntimeHelper.POINTER.withName("USBDeviceClose"),
        RuntimeHelper.POINTER.withName("GetDeviceClass"),
        RuntimeHelper.POINTER.withName("GetDeviceSubClass"),
        RuntimeHelper.POINTER.withName("GetDeviceProtocol"),
        RuntimeHelper.POINTER.withName("GetDeviceVendor"),
        RuntimeHelper.POINTER.withName("GetDeviceProduct"),
        RuntimeHelper.POINTER.withName("GetDeviceReleaseNumber"),
        RuntimeHelper.POINTER.withName("GetDeviceAddress"),
        RuntimeHelper.POINTER.withName("GetDeviceBusPowerAvailable"),
        RuntimeHelper.POINTER.withName("GetDeviceSpeed"),
        RuntimeHelper.POINTER.withName("GetNumberOfConfigurations"),
        RuntimeHelper.POINTER.withName("GetLocationID"),
        RuntimeHelper.POINTER.withName("GetConfigurationDescriptorPtr"),
        RuntimeHelper.POINTER.withName("GetConfiguration"),
        RuntimeHelper.POINTER.withName("SetConfiguration"),
        RuntimeHelper.POINTER.withName("GetBusFrameNumber"),
        RuntimeHelper.POINTER.withName("ResetDevice"),
        RuntimeHelper.POINTER.withName("DeviceRequest"),
        RuntimeHelper.POINTER.withName("DeviceRequestAsync"),
        RuntimeHelper.POINTER.withName("CreateInterfaceIterator"),
        RuntimeHelper.POINTER.withName("USBDeviceOpenSeize"),
        RuntimeHelper.POINTER.withName("DeviceRequestTO"),
        RuntimeHelper.POINTER.withName("DeviceRequestAsyncTO"),
        RuntimeHelper.POINTER.withName("USBDeviceSuspend"),
        RuntimeHelper.POINTER.withName("USBDeviceAbortPipeZero"),
        RuntimeHelper.POINTER.withName("USBGetManufacturerStringIndex"),
        RuntimeHelper.POINTER.withName("USBGetProductStringIndex"),
        RuntimeHelper.POINTER.withName("USBGetSerialNumberStringIndex"),
        RuntimeHelper.POINTER.withName("USBDeviceReEnumerate")
    ).withName("IOUSBDeviceStruct187");
}


