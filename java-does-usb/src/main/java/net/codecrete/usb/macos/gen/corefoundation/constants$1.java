// Generated by jextract

package net.codecrete.usb.macos.gen.corefoundation;

import java.lang.foreign.FunctionDescriptor;
import java.lang.foreign.MemoryLayout;
import java.lang.invoke.MethodHandle;
class constants$1 {

    static final FunctionDescriptor CFNumberGetTypeID$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT);
    static final MethodHandle CFNumberGetTypeID$MH = RuntimeHelper.downcallHandle(
        "CFNumberGetTypeID",
        constants$1.CFNumberGetTypeID$FUNC
    );
    static final FunctionDescriptor CFNumberGetValue$FUNC = FunctionDescriptor.of(Constants$root.C_CHAR$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle CFNumberGetValue$MH = RuntimeHelper.downcallHandle(
        "CFNumberGetValue",
        constants$1.CFNumberGetValue$FUNC
    );
    static final FunctionDescriptor CFRunLoopGetCurrent$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle CFRunLoopGetCurrent$MH = RuntimeHelper.downcallHandle(
        "CFRunLoopGetCurrent",
        constants$1.CFRunLoopGetCurrent$FUNC
    );
    static final FunctionDescriptor CFRunLoopRun$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle CFRunLoopRun$MH = RuntimeHelper.downcallHandle(
        "CFRunLoopRun",
        constants$1.CFRunLoopRun$FUNC
    );
    static final FunctionDescriptor CFRunLoopAddSource$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle CFRunLoopAddSource$MH = RuntimeHelper.downcallHandle(
        "CFRunLoopAddSource",
        constants$1.CFRunLoopAddSource$FUNC
    );
    static final FunctionDescriptor CFUUIDCreateFromUUIDBytes$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_CHAR$LAYOUT.withName("byte0"),
            Constants$root.C_CHAR$LAYOUT.withName("byte1"),
            Constants$root.C_CHAR$LAYOUT.withName("byte2"),
            Constants$root.C_CHAR$LAYOUT.withName("byte3"),
            Constants$root.C_CHAR$LAYOUT.withName("byte4"),
            Constants$root.C_CHAR$LAYOUT.withName("byte5"),
            Constants$root.C_CHAR$LAYOUT.withName("byte6"),
            Constants$root.C_CHAR$LAYOUT.withName("byte7"),
            Constants$root.C_CHAR$LAYOUT.withName("byte8"),
            Constants$root.C_CHAR$LAYOUT.withName("byte9"),
            Constants$root.C_CHAR$LAYOUT.withName("byte10"),
            Constants$root.C_CHAR$LAYOUT.withName("byte11"),
            Constants$root.C_CHAR$LAYOUT.withName("byte12"),
            Constants$root.C_CHAR$LAYOUT.withName("byte13"),
            Constants$root.C_CHAR$LAYOUT.withName("byte14"),
            Constants$root.C_CHAR$LAYOUT.withName("byte15")
        )
    );
    static final MethodHandle CFUUIDCreateFromUUIDBytes$MH = RuntimeHelper.downcallHandle(
        "CFUUIDCreateFromUUIDBytes",
        constants$1.CFUUIDCreateFromUUIDBytes$FUNC
    );
}


