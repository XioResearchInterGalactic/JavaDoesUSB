// Generated by jextract

package net.codecrete.usb.linux.gen.ioctl;

import java.lang.invoke.MethodHandle;

import static java.lang.foreign.ValueLayout.*;
public class ioctl  {

    public static final OfByte C_CHAR = Constants$root.C_CHAR$LAYOUT;
    public static final OfShort C_SHORT = Constants$root.C_SHORT$LAYOUT;
    public static final OfInt C_INT = Constants$root.C_INT$LAYOUT;
    public static final OfLong C_LONG = Constants$root.C_LONG_LONG$LAYOUT;
    public static final OfLong C_LONG_LONG = Constants$root.C_LONG_LONG$LAYOUT;
    public static final OfFloat C_FLOAT = Constants$root.C_FLOAT$LAYOUT;
    public static final OfDouble C_DOUBLE = Constants$root.C_DOUBLE$LAYOUT;
    public static final OfAddress C_POINTER = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle ioctl$MH() {
        return RuntimeHelper.requireNonNull(constants$0.ioctl$MH,"ioctl");
    }
    /**
     * {@snippet :
     * int ioctl(int __fd, unsigned long __request,...);
     * }
     */
    public static int ioctl(int __fd, long __request, Object... x2) {
        var mh$ = ioctl$MH();
        try {
            return (int)mh$.invokeExact(__fd, __request, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


