// Generated by jextract

package net.codecrete.usb.linux.gen.fcntl;

import java.lang.foreign.MemorySegment;
import java.lang.invoke.MethodHandle;

import static java.lang.foreign.ValueLayout.*;
public class fcntl  {

    public static final OfByte C_CHAR = Constants$root.C_CHAR$LAYOUT;
    public static final OfShort C_SHORT = Constants$root.C_SHORT$LAYOUT;
    public static final OfInt C_INT = Constants$root.C_INT$LAYOUT;
    public static final OfLong C_LONG = Constants$root.C_LONG_LONG$LAYOUT;
    public static final OfLong C_LONG_LONG = Constants$root.C_LONG_LONG$LAYOUT;
    public static final OfFloat C_FLOAT = Constants$root.C_FLOAT$LAYOUT;
    public static final OfDouble C_DOUBLE = Constants$root.C_DOUBLE$LAYOUT;
    public static final OfAddress C_POINTER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * #define O_RDWR 2
     * }
     */
    public static int O_RDWR() {
        return (int)2L;
    }
    public static MethodHandle open$MH() {
        return RuntimeHelper.requireNonNull(constants$0.open$MH,"open");
    }
    /**
     * {@snippet :
     * int open(char* __file, int __oflag,...);
     * }
     */
    public static int open(MemorySegment __file, int __oflag, Object... x2) {
        var mh$ = open$MH();
        try {
            return (int)mh$.invokeExact(__file, __oflag, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * #define O_CLOEXEC 524288
     * }
     */
    public static int O_CLOEXEC() {
        return (int)524288L;
    }
}


