// Generated by jextract

package net.codecrete.usb.linux.gen.udev;

import java.lang.foreign.Addressable;
import java.lang.foreign.MemoryAddress;
import java.lang.invoke.MethodHandle;

import static java.lang.foreign.ValueLayout.*;
public class udev  {

    /* package-private */ udev() {}
    public static OfByte C_CHAR = Constants$root.C_CHAR$LAYOUT;
    public static OfShort C_SHORT = Constants$root.C_SHORT$LAYOUT;
    public static OfInt C_INT = Constants$root.C_INT$LAYOUT;
    public static OfLong C_LONG = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong C_LONG_LONG = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfFloat C_FLOAT = Constants$root.C_FLOAT$LAYOUT;
    public static OfDouble C_DOUBLE = Constants$root.C_DOUBLE$LAYOUT;
    public static OfAddress C_POINTER = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle udev_new$MH() {
        return RuntimeHelper.requireNonNull(constants$0.udev_new$MH,"udev_new");
    }
    public static MemoryAddress udev_new () {
        var mh$ = udev_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle udev_list_entry_get_next$MH() {
        return RuntimeHelper.requireNonNull(constants$0.udev_list_entry_get_next$MH,"udev_list_entry_get_next");
    }
    public static MemoryAddress udev_list_entry_get_next ( Addressable list_entry) {
        var mh$ = udev_list_entry_get_next$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(list_entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle udev_list_entry_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$0.udev_list_entry_get_name$MH,"udev_list_entry_get_name");
    }
    public static MemoryAddress udev_list_entry_get_name ( Addressable list_entry) {
        var mh$ = udev_list_entry_get_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(list_entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle udev_device_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$0.udev_device_unref$MH,"udev_device_unref");
    }
    public static MemoryAddress udev_device_unref ( Addressable udev_device) {
        var mh$ = udev_device_unref$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(udev_device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle udev_device_new_from_syspath$MH() {
        return RuntimeHelper.requireNonNull(constants$0.udev_device_new_from_syspath$MH,"udev_device_new_from_syspath");
    }
    public static MemoryAddress udev_device_new_from_syspath ( Addressable udev,  Addressable syspath) {
        var mh$ = udev_device_new_from_syspath$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(udev, syspath);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle udev_device_get_devnode$MH() {
        return RuntimeHelper.requireNonNull(constants$0.udev_device_get_devnode$MH,"udev_device_get_devnode");
    }
    public static MemoryAddress udev_device_get_devnode ( Addressable udev_device) {
        var mh$ = udev_device_get_devnode$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(udev_device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle udev_device_get_sysattr_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1.udev_device_get_sysattr_value$MH,"udev_device_get_sysattr_value");
    }
    public static MemoryAddress udev_device_get_sysattr_value ( Addressable udev_device,  Addressable sysattr) {
        var mh$ = udev_device_get_sysattr_value$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(udev_device, sysattr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle udev_enumerate_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$1.udev_enumerate_unref$MH,"udev_enumerate_unref");
    }
    public static MemoryAddress udev_enumerate_unref ( Addressable udev_enumerate) {
        var mh$ = udev_enumerate_unref$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(udev_enumerate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle udev_enumerate_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1.udev_enumerate_new$MH,"udev_enumerate_new");
    }
    public static MemoryAddress udev_enumerate_new ( Addressable udev) {
        var mh$ = udev_enumerate_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(udev);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle udev_enumerate_add_match_subsystem$MH() {
        return RuntimeHelper.requireNonNull(constants$1.udev_enumerate_add_match_subsystem$MH,"udev_enumerate_add_match_subsystem");
    }
    public static int udev_enumerate_add_match_subsystem ( Addressable udev_enumerate,  Addressable subsystem) {
        var mh$ = udev_enumerate_add_match_subsystem$MH();
        try {
            return (int)mh$.invokeExact(udev_enumerate, subsystem);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle udev_enumerate_scan_devices$MH() {
        return RuntimeHelper.requireNonNull(constants$1.udev_enumerate_scan_devices$MH,"udev_enumerate_scan_devices");
    }
    public static int udev_enumerate_scan_devices ( Addressable udev_enumerate) {
        var mh$ = udev_enumerate_scan_devices$MH();
        try {
            return (int)mh$.invokeExact(udev_enumerate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle udev_enumerate_get_list_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$1.udev_enumerate_get_list_entry$MH,"udev_enumerate_get_list_entry");
    }
    public static MemoryAddress udev_enumerate_get_list_entry ( Addressable udev_enumerate) {
        var mh$ = udev_enumerate_get_list_entry$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(udev_enumerate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


