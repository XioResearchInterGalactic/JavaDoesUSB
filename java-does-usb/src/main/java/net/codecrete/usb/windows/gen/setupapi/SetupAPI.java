// Generated by jextract

package net.codecrete.usb.windows.gen.setupapi;

import java.lang.foreign.MemorySegment;
import java.lang.invoke.MethodHandle;

import static java.lang.foreign.ValueLayout.*;
public class SetupAPI  {

    public static final OfByte C_CHAR = Constants$root.C_CHAR$LAYOUT;
    public static final OfShort C_SHORT = Constants$root.C_SHORT$LAYOUT;
    public static final OfInt C_INT = Constants$root.C_LONG$LAYOUT;
    public static final OfInt C_LONG = Constants$root.C_LONG$LAYOUT;
    public static final OfLong C_LONG_LONG = Constants$root.C_LONG_LONG$LAYOUT;
    public static final OfFloat C_FLOAT = Constants$root.C_FLOAT$LAYOUT;
    public static final OfDouble C_DOUBLE = Constants$root.C_DOUBLE$LAYOUT;
    public static final OfAddress C_POINTER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * #define DEVPROP_TYPEMOD_LIST 8192
     * }
     */
    public static int DEVPROP_TYPEMOD_LIST() {
        return (int)8192L;
    }
    /**
     * {@snippet :
     * #define DEVPROP_TYPE_UINT32 7
     * }
     */
    public static int DEVPROP_TYPE_UINT32() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * #define DEVPROP_TYPE_STRING 18
     * }
     */
    public static int DEVPROP_TYPE_STRING() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * #define DICS_FLAG_GLOBAL 1
     * }
     */
    public static int DICS_FLAG_GLOBAL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define DIGCF_PRESENT 2
     * }
     */
    public static int DIGCF_PRESENT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define DIGCF_DEVICEINTERFACE 16
     * }
     */
    public static int DIGCF_DEVICEINTERFACE() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define DIREG_DEV 1
     * }
     */
    public static int DIREG_DEV() {
        return (int)1L;
    }
    public static MethodHandle SetupDiCreateDeviceInfoList$MH() {
        return RuntimeHelper.requireNonNull(constants$0.SetupDiCreateDeviceInfoList$MH,"SetupDiCreateDeviceInfoList");
    }
    /**
     * {@snippet :
     * HDEVINFO SetupDiCreateDeviceInfoList(const GUID* ClassGuid, HWND hwndParent);
     * }
     */
    public static MemorySegment SetupDiCreateDeviceInfoList(MemorySegment ClassGuid, MemorySegment hwndParent) {
        var mh$ = SetupDiCreateDeviceInfoList$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(ClassGuid, hwndParent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetupDiOpenDeviceInfoW$MH() {
        return RuntimeHelper.requireNonNull(constants$0.SetupDiOpenDeviceInfoW$MH,"SetupDiOpenDeviceInfoW");
    }
    /**
     * {@snippet :
     * BOOL SetupDiOpenDeviceInfoW(HDEVINFO DeviceInfoSet, PCWSTR DeviceInstanceId, HWND hwndParent, DWORD OpenFlags, PSP_DEVINFO_DATA DeviceInfoData);
     * }
     */
    public static int SetupDiOpenDeviceInfoW(MemorySegment DeviceInfoSet, MemorySegment DeviceInstanceId, MemorySegment hwndParent, int OpenFlags, MemorySegment DeviceInfoData) {
        var mh$ = SetupDiOpenDeviceInfoW$MH();
        try {
            return (int)mh$.invokeExact(DeviceInfoSet, DeviceInstanceId, hwndParent, OpenFlags, DeviceInfoData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetupDiDestroyDeviceInfoList$MH() {
        return RuntimeHelper.requireNonNull(constants$0.SetupDiDestroyDeviceInfoList$MH,"SetupDiDestroyDeviceInfoList");
    }
    /**
     * {@snippet :
     * BOOL SetupDiDestroyDeviceInfoList(HDEVINFO DeviceInfoSet);
     * }
     */
    public static int SetupDiDestroyDeviceInfoList(MemorySegment DeviceInfoSet) {
        var mh$ = SetupDiDestroyDeviceInfoList$MH();
        try {
            return (int)mh$.invokeExact(DeviceInfoSet);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetupDiOpenDeviceInterfaceW$MH() {
        return RuntimeHelper.requireNonNull(constants$0.SetupDiOpenDeviceInterfaceW$MH,"SetupDiOpenDeviceInterfaceW");
    }
    /**
     * {@snippet :
     * BOOL SetupDiOpenDeviceInterfaceW(HDEVINFO DeviceInfoSet, PCWSTR DevicePath, DWORD OpenFlags, PSP_DEVICE_INTERFACE_DATA DeviceInterfaceData);
     * }
     */
    public static int SetupDiOpenDeviceInterfaceW(MemorySegment DeviceInfoSet, MemorySegment DevicePath, int OpenFlags, MemorySegment DeviceInterfaceData) {
        var mh$ = SetupDiOpenDeviceInterfaceW$MH();
        try {
            return (int)mh$.invokeExact(DeviceInfoSet, DevicePath, OpenFlags, DeviceInterfaceData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetupDiDeleteDeviceInterfaceData$MH() {
        return RuntimeHelper.requireNonNull(constants$0.SetupDiDeleteDeviceInterfaceData$MH,"SetupDiDeleteDeviceInterfaceData");
    }
    /**
     * {@snippet :
     * BOOL SetupDiDeleteDeviceInterfaceData(HDEVINFO DeviceInfoSet, PSP_DEVICE_INTERFACE_DATA DeviceInterfaceData);
     * }
     */
    public static int SetupDiDeleteDeviceInterfaceData(MemorySegment DeviceInfoSet, MemorySegment DeviceInterfaceData) {
        var mh$ = SetupDiDeleteDeviceInterfaceData$MH();
        try {
            return (int)mh$.invokeExact(DeviceInfoSet, DeviceInterfaceData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetupDiGetDeviceRegistryPropertyW$MH() {
        return RuntimeHelper.requireNonNull(constants$0.SetupDiGetDeviceRegistryPropertyW$MH,"SetupDiGetDeviceRegistryPropertyW");
    }
    /**
     * {@snippet :
     * BOOL SetupDiGetDeviceRegistryPropertyW(HDEVINFO DeviceInfoSet, PSP_DEVINFO_DATA DeviceInfoData, DWORD Property, PDWORD PropertyRegDataType, PBYTE PropertyBuffer, DWORD PropertyBufferSize, PDWORD RequiredSize);
     * }
     */
    public static int SetupDiGetDeviceRegistryPropertyW(MemorySegment DeviceInfoSet, MemorySegment DeviceInfoData, int Property, MemorySegment PropertyRegDataType, MemorySegment PropertyBuffer, int PropertyBufferSize, MemorySegment RequiredSize) {
        var mh$ = SetupDiGetDeviceRegistryPropertyW$MH();
        try {
            return (int)mh$.invokeExact(DeviceInfoSet, DeviceInfoData, Property, PropertyRegDataType, PropertyBuffer, PropertyBufferSize, RequiredSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * #define SPDRP_ADDRESS 28
     * }
     */
    public static int SPDRP_ADDRESS() {
        return (int)28L;
    }
}


